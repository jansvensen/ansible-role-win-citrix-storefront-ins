---
  - name: Install NuGet
    win_shell: Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force

  - name: Check for PendingReboot module
    win_psmodule:
      name: PendingReboot
      state: present
      accept_license: true
    retries: 3
    delay: 10
    register: result
    until: result is not failed

  - name: Install Citrix Storefront prerequisites
    win_feature:
      name: '{{ item }}'
      state: present
    with_items: '{{ citrix.storefront.installation.prereqs }}'

  - name: Reboot machine for Windows Features
    ansible.windows.win_reboot:

  - name: Create Log Folder
    win_file:
      path: '{{ directory_logging }}'
      state: directory

  - name: Create Install Folder
    win_file:
      path: '{{ directory_install }}'
      state: directory

  - name: Create Citrix Install Folder
    win_file:
      path: '{{ directory_install }}\Citrix'
      state: directory

  - name: Check if Citrix ISO is downloaded yet
    win_stat:
      path: '{{ directory_install }}\Citrix\{{ citrix.installation.source }}'
    register: citrix_iso

  - name: Download Citrix ISO
    win_get_url:
      url: '{{ citrix.installation.path }}/{{ citrix.version.number }}/{{ citrix.installation.source }}'
      dest: '{{ directory_install }}\Citrix\{{ citrix.installation.source }}'
    when: citrix_iso.stat.exists == false

  - name: Register iso path
    set_fact:
      iso_path: '{{ directory_install }}\Citrix\{{ citrix.installation.source }}'

  - name: Check for pending reboot
    win_shell: (Test-PendingReboot -SkipConfigurationManagerClientCheck).IsRebootPending
    register: pending_reboot

  - name: Set fact for pending reboot
    set_fact:
      pending_reboot: '{{ pending_reboot.stdout | trim | lower }}'

  - name: Reboot to remove the pending reboot
    ansible.windows.win_reboot:
    when: pending_reboot == true

  - name: Mount the Citrix installation ISO
    win_disk_image:
      image_path: '{{ iso_path }}'
      state: present
    register: disk_image_out

  - name: Install Citrix Storefront role
    win_package:
      path: '{{ disk_image_out.mount_paths[0] }}\\x64\\Storefront\\CitrixStoreFront-x64.exe'
      arguments: -silent
      state: present
      expected_return_code: [0, 3, 3010]
    register: citrix_installation

  - name: Unmount Citrix installation ISO
    win_disk_image:
      image_path: '{{ iso_path }}'
      state: absent

  - name: Reboot to complete Citrix Storefront installation
    ansible.windows.win_reboot:
    when: citrix_installation.changed